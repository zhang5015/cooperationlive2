<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CooperationNotice', 'doctrine');

/**
 * BaseCooperationNotice
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $category_id
 * @property string $type
 * @property string $company
 * @property string $logo
 * @property string $url
 * @property string $position
 * @property string $location
 * @property string $description
 * @property string $how_to_apply
 * @property string $token
 * @property integer $is_public
 * @property integer $is_activated
 * @property string $email
 * @property timestamp $expires_at
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property CooperationCategory $CooperationCategory
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method integer             getCategoryId()          Returns the current record's "category_id" value
 * @method string              getType()                Returns the current record's "type" value
 * @method string              getCompany()             Returns the current record's "company" value
 * @method string              getLogo()                Returns the current record's "logo" value
 * @method string              getUrl()                 Returns the current record's "url" value
 * @method string              getPosition()            Returns the current record's "position" value
 * @method string              getLocation()            Returns the current record's "location" value
 * @method string              getDescription()         Returns the current record's "description" value
 * @method string              getHowToApply()          Returns the current record's "how_to_apply" value
 * @method string              getToken()               Returns the current record's "token" value
 * @method integer             getIsPublic()            Returns the current record's "is_public" value
 * @method integer             getIsActivated()         Returns the current record's "is_activated" value
 * @method string              getEmail()               Returns the current record's "email" value
 * @method timestamp           getExpiresAt()           Returns the current record's "expires_at" value
 * @method timestamp           getCreatedAt()           Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()           Returns the current record's "updated_at" value
 * @method CooperationCategory getCooperationCategory() Returns the current record's "CooperationCategory" value
 * @method CooperationNotice   setId()                  Sets the current record's "id" value
 * @method CooperationNotice   setCategoryId()          Sets the current record's "category_id" value
 * @method CooperationNotice   setType()                Sets the current record's "type" value
 * @method CooperationNotice   setCompany()             Sets the current record's "company" value
 * @method CooperationNotice   setLogo()                Sets the current record's "logo" value
 * @method CooperationNotice   setUrl()                 Sets the current record's "url" value
 * @method CooperationNotice   setPosition()            Sets the current record's "position" value
 * @method CooperationNotice   setLocation()            Sets the current record's "location" value
 * @method CooperationNotice   setDescription()         Sets the current record's "description" value
 * @method CooperationNotice   setHowToApply()          Sets the current record's "how_to_apply" value
 * @method CooperationNotice   setToken()               Sets the current record's "token" value
 * @method CooperationNotice   setIsPublic()            Sets the current record's "is_public" value
 * @method CooperationNotice   setIsActivated()         Sets the current record's "is_activated" value
 * @method CooperationNotice   setEmail()               Sets the current record's "email" value
 * @method CooperationNotice   setExpiresAt()           Sets the current record's "expires_at" value
 * @method CooperationNotice   setCreatedAt()           Sets the current record's "created_at" value
 * @method CooperationNotice   setUpdatedAt()           Sets the current record's "updated_at" value
 * @method CooperationNotice   setCooperationCategory() Sets the current record's "CooperationCategory" value
 * 
 * @package    cooperation
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCooperationNotice extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cooperation_notice');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('category_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('company', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('logo', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('position', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('location', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('how_to_apply', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('is_public', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('is_activated', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('expires_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CooperationCategory', array(
             'local' => 'category_id',
             'foreign' => 'id'));
    }
}