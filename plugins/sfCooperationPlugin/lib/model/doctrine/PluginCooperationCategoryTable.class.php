<?php

/**
 * PluginCooperationCategoryTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginCooperationCategoryTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object CooperationCategoryTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('CooperationCategory');
    }

    public function getWithNotices()
    {
        $q = $this->createQuery('c')
        ->leftJoin('c.CooperationNotice j')
        ->where('j.expires_at > ?', date('Y-m-d H:i:s', time()));

        $q->andWhere('j.is_activated = ?', 1);

        return $q->execute();

    }

    public function getWithArticles()
    {
        $q = $this->createQuery('c')
        ->leftJoin('c.CooperationArticle j')
        ->where('j.expires_at > ?', date('Y-m-d H:i:s', time()));

        $q->andWhere('j.is_activated = ?', 1);

        return $q->execute();

    }

    //    //Since Doctrine provides some magic finders for all columns in a model, we need to simply create the findOneBySlug() method so that we override the default magic functionality Doctrine provides.
    //    public function findOneBySlug($slug)
    //    {
    //        $q = $this->createQuery('a')
    //        ->leftJoin('a.Translation t')
    //        ->andWhere('t.lang = ?', 'en')
    //        ->andWhere('t.slug = ?', $slug);
    //        return $q->fetchOne();
    //    }

    public function doSelectForSlug($parameters)
    {
        return $this->findOneBySlugAndCulture($parameters['slug'], $parameters['sf_culture']);
    }

    public function findOneBySlugAndCulture($slug, $culture = 'en')
    {
        $q = $this->createQuery('a')
        ->leftJoin('a.Translation t')
        ->andWhere('t.lang = ?', $culture)
        ->andWhere('t.slug = ?', $slug);
        return $q->fetchOne();
    }

    public function findOneBySlug($slug)
    {
        return $this->findOneBySlugAndCulture($slug, 'en');
    }

    }